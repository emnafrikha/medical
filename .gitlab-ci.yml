stages:
  - test
  - build
  - deploy

variables:
  # Configuration Flutter
  FLUTTER_IMAGE: ghcr.io/cirruslabs/flutter:3.29.2
  # Configuration Django
  PYTHON_IMAGE: python:3.12
  DJANGO_PROJECT_DIR: "medical"  # Remplacez par votre dossier Django
  FLUTTER_PROJECT_DIR: "medical_manegement1"  # Remplacez par votre dossier Flutter

# ------------------------------------------
# Étape 1 : Tests Django
# ------------------------------------------
django_test:
  image: $PYTHON_IMAGE
  stage: test
  before_script:
    - python -m pip install --upgrade pip
    - cd $DJANGO_PROJECT_DIR
  script:
    - pip install -r requirements.txt
    - python manage.py test
  only:
    - main
    - merge_requests

# ------------------------------------------
# Étape 2 : Tests Flutter
# ------------------------------------------
flutter_test:
  image: $FLUTTER_IMAGE
  stage: test
  before_script:
    - cd $FLUTTER_PROJECT_DIR
    - flutter pub get
  script:
    - flutter test
  only:
    - main
    - merge_requests

# ------------------------------------------
# Étape 3 : Build Flutter Web
# ------------------------------------------
flutter_build:
  image: $FLUTTER_IMAGE
  stage: build
  before_script:
    - cd $FLUTTER_PROJECT_DIR
    - flutter pub get
  script:
    - flutter build web --release
  artifacts:
    paths:
      - $FLUTTER_PROJECT_DIR/build/web
  only:
    - main

# ------------------------------------------
# Étape 4 : Déploiement Django sur Render.com
# ------------------------------------------
deploy_django:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache git curl
  script:
    # Vérifie que render.yaml est présent
    - if [ ! -f render.yaml ]; then echo "❌ Fichier render.yaml manquant"; exit 1; fi
    
    # Configure Git pour Render (optionnel)
    - git config --global user.name "GitLab CI"
    - git config --global user.email "ci@gitlab.com"
    
    # Pousse les changements si nécessaire (version simplifiée)
    - echo "✅ Déclenchement du déploiement Render via Git"
    - echo "Le déploiement se fera automatiquement après le push"
    
    # Alternative : Déploiement via API Render (si clé API configurée)
    # - curl -X POST "https://api.render.com/v1/services?key=$RENDER_API_KEY"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual  # Changez à "on_success" pour automatiser

# ------------------------------------------
# Étape 5 : Déploiement Flutter (ex: Firebase)
# ------------------------------------------
deploy_flutter:
  stage: deploy
  image: node:20
  before_script:
    - npm install -g firebase-tools
  script:
    - cd $FLUTTER_PROJECT_DIR/build/web
    - firebase deploy --token $FIREBASE_TOKEN --project your-project-id
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual  # Déclenchement manuel